diff -ruN VTK-9.2.6/ThirdParty/cgns/vtkcgns/src/adfh/ADFH.c VTK-9.2.6.patched/ThirdParty/cgns/vtkcgns/src/adfh/ADFH.c
--- VTK-9.2.6/ThirdParty/cgns/vtkcgns/src/adfh/ADFH.c	2023-02-15 05:03:53.000000000 +0100
+++ VTK-9.2.6.patched/ThirdParty/cgns/vtkcgns/src/adfh/ADFH.c	2024-06-28 18:00:10.000000000 +0200
@@ -39,11 +39,6 @@
 #endif
 
 #include "ADFH.h"
-
-// xxx(kitware): needed to overcome
-// https://cgnsorg.atlassian.net/browse/CGNS-251
-#define H5O_info_t_vers 2
-
 #include "vtk_hdf5.h"
 #include "cgns_io.h" /* for cgio_find_file */
 
@@ -70,6 +65,18 @@
 static MPI_Comm ParallelMPICommunicator = MPI_COMM_NULL;
 #endif
 
+#if H5_VERSION_GE(1,10,3) && !defined(H5_USE_18_API) && !defined(H5_USE_16_API)
+#define ADFH_HDF5_HAVE_110_API 1
+#else
+#define ADFH_HDF5_HAVE_110_API 0
+#endif
+
+#if H5_VERSION_GE(1,12,0) && !defined(H5_USE_110_API) && !defined(H5_USE_18_API) && !defined(H5_USE_16_API)
+#define ADFH_HDF5_HAVE_112_API 1
+#else
+#define ADFH_HDF5_HAVE_112_API 0
+#endif
+
 /*** HDF5's CORE FILE DRIVER PARAMETERS ****/
 
 /* Enables using the core file driver */
@@ -291,7 +298,7 @@
 static herr_t gfind_by_name(hid_t, const char *, const H5L_info_t*, void *);
 static herr_t find_by_name(hid_t, const char *, const H5A_info_t*, void *);
 
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
 #define has_child(ID,NAME) H5Literate2(ID, H5_INDEX_CRT_ORDER, H5_ITER_NATIVE, NULL, gfind_by_name, (void *)NAME)
 #define has_data(ID)       H5Literate2(ID, H5_INDEX_CRT_ORDER, H5_ITER_NATIVE, NULL, gfind_by_name, (void *)D_DATA)
 #else
@@ -368,7 +375,7 @@
   int token_cmp;
   /* find the file ID from the root ID */
 
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
   if (H5Oget_info_by_name3(id, "/", &gstat, H5O_INFO_BASIC, H5P_DEFAULT) >=0) {
 #else
   if (H5Oget_info_by_name(id, "/", &gstat, H5P_DEFAULT) >=0) {
@@ -379,7 +386,7 @@
       if (objs == NULL) return fid;
       H5Fget_obj_ids(H5F_OBJ_ALL, H5F_OBJ_FILE, -1, objs);
       for (n = 0; n < nobj; n++) {
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
         H5Oget_info_by_name3(objs[n], "/", &rstat, H5O_INFO_BASIC, H5P_DEFAULT);
         token_cmp = 1;
         if(gstat.fileno == rstat.fileno){
@@ -1055,7 +1062,7 @@
 
   if (*name != D_PREFIX) {
     pstat = (H5O_info_t *)data;
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
     if (H5Oget_info_by_name3(id, name, &stat, H5O_INFO_BASIC, H5P_DEFAULT) >= 0){
       token_cmp = 1;
       if(pstat->fileno == stat.fileno){
@@ -1162,7 +1169,7 @@
       }
   }
 #ifdef ADFH_DEBUG_ON
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
   H5Oget_info3(lid, &oinfo, H5O_INFO_BASIC);
 #else
   H5Oget_info(lid, &oinfo);
@@ -1270,7 +1277,7 @@
   }
   else {
     ADFH_DEBUG(("delete_children loop"));
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
     if (! is_link(id)) H5Literate_by_name2(id, name, H5_INDEX_CRT_ORDER, H5_ITER_INC, NULL, delete_children, data, H5P_DEFAULT);
 #else
     if (! is_link(id)) H5Literate_by_name(id, name, H5_INDEX_CRT_ORDER, H5_ITER_INC, NULL, delete_children, data, H5P_DEFAULT);
@@ -1430,7 +1437,7 @@
 
   if (*name != D_PREFIX && (gid = H5Gopen2(id, name, H5P_DEFAULT)) >= 0 &&
      !get_str_att(gid, A_TYPE, type, &err) && strcmp(type, ADFH_LK)) {
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
     H5Literate2(gid, H5_INDEX_CRT_ORDER, H5_ITER_NATIVE, NULL, fix_dimensions, NULL);
 #else
     H5Literate(gid, H5_INDEX_CRT_ORDER, H5_ITER_NATIVE, NULL, fix_dimensions, NULL);
@@ -1523,7 +1530,7 @@
 
   /* check that node is actually child of the parent */
 
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
   if (H5Oget_info_by_name3(hid, ".", &stat, H5O_INFO_BASIC, H5P_DEFAULT) < 0 ||
     !H5Literate2(hpid, H5_INDEX_CRT_ORDER, H5_ITER_NATIVE, NULL, compare_children, (void *)&stat)) {
 #else
@@ -1579,7 +1586,7 @@
       set_int_att(hid, A_ORDER, new_order, err)) return;
 
   /*see if we need to decrement any node _orders under the old parent*/
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
   *err = H5Literate2(hpid, H5_INDEX_CRT_ORDER, H5_ITER_INC, NULL, fix_order, (void *)&old_order);
 #else
   *err = H5Literate(hpid, H5_INDEX_CRT_ORDER, H5_ITER_INC, NULL, fix_order, (void *)&old_order);
@@ -1765,7 +1772,7 @@
         new_int_att(gid, A_FLAGS, mta_root->g_flags, err)) return;
 #else
     int order = 0;
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
     H5Literate2(hpid, H5_INDEX_CRT_ORDER, H5_ITER_INC, NULL, count_children, (void *)&order);
 #else
     H5Literate(hpid, H5_INDEX_CRT_ORDER, H5_ITER_INC, NULL, count_children, (void *)&order);
@@ -1811,7 +1818,7 @@
 
   /* check that node is actually child of the parent */
 
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
   if (H5Oget_info_by_name3(hid, ".", &stat, H5O_INFO_BASIC, H5P_DEFAULT) < 0 ||
     !H5Literate2(hpid, H5_INDEX_CRT_ORDER, H5_ITER_INC, NULL, compare_children, (void *)&stat)){
 #else
@@ -1835,7 +1842,7 @@
 
   if (! is_link(hid))
   {
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
     H5Literate2(hid, H5_INDEX_CRT_ORDER, H5_ITER_INC, NULL, delete_children, NULL);
 #else
     H5Literate(hid, H5_INDEX_CRT_ORDER, H5_ITER_INC, NULL, delete_children, NULL);
@@ -1850,7 +1857,7 @@
   /* decrement node orders */
 
 #ifndef ADFH_NO_ORDER
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
   *err = H5Literate2(hpid, H5_INDEX_CRT_ORDER, H5_ITER_INC, NULL, fix_order, (void *)&old_order);
 #else
   *err = H5Literate(hpid, H5_INDEX_CRT_ORDER, H5_ITER_INC, NULL, fix_order, (void *)&old_order);
@@ -1879,7 +1886,7 @@
 
   *number = 0;
   if ((hid = open_node(id, err)) >= 0) {
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
     H5Literate2(hid, H5_INDEX_CRT_ORDER, H5_ITER_NATIVE, &gskip, count_children, (void *)number);
 #else
     H5Literate(hid, H5_INDEX_CRT_ORDER, H5_ITER_NATIVE, &gskip, count_children, (void *)number);
@@ -1988,7 +1995,7 @@
   /*initialize names to null*/
   memset(names, 0, ilen*name_length);
   if ((hpid = open_node(pid, err)) >= 0) {
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
     H5Literate2(hpid,H5_INDEX_CRT_ORDER,H5_ITER_INC,
                NULL,children_names,(void *)names);
 #else
@@ -1997,7 +2004,7 @@
 #endif
     if (names[0]==0)
     {
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
       H5Literate2(hpid,H5_INDEX_NAME,H5_ITER_INC,
                  NULL,children_names,(void *)names);
 #else
@@ -2038,7 +2045,7 @@
   mta_root->i_count = 0;
 #endif
   if ((hpid = open_node(pid, err)) >= 0) {
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
     H5Literate2(hpid,H5_INDEX_CRT_ORDER,H5_ITER_INC,
                NULL,children_ids,(void *)IDs);
 #else
@@ -2047,7 +2054,7 @@
 #endif
     if (IDs[0]==-1)
     {
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
       H5Literate2(hpid,H5_INDEX_NAME,H5_ITER_INC,
                  NULL,children_ids,(void *)IDs);
 #else
@@ -2233,21 +2240,6 @@
   H5Pset_fclose_degree(g_propfileopen, H5F_CLOSE_STRONG);
 #endif
 
-  /* Patch to read file created with CGNS 3.3 and hdf5 > 1.8 */
-  if (mode == ADFH_MODE_RDO) {
-      H5Pset_libver_bounds(g_propfileopen,
-          H5F_LIBVER_LATEST, H5F_LIBVER_LATEST);
-  }
-  else {
-    /* Compatibility with V1.8 */
-    H5Pset_libver_bounds(g_propfileopen,
-#if H5_VERSION_GE(1,10,3)
-          H5F_LIBVER_V18, H5F_LIBVER_V18);
-#else
-          H5F_LIBVER_LATEST, H5F_LIBVER_LATEST);
-#endif
-  }
-
   /* open the file */
 
 #if CG_BUILD_PARALLEL
@@ -2281,6 +2273,15 @@
   set_error(NO_ERROR, err);
 
   if (mode == ADFH_MODE_NEW) {
+
+    /* Compatibility with V1.8 */
+    H5Pset_libver_bounds(g_propfileopen,
+#if ADFH_HDF5_HAVE_110_API
+          H5F_LIBVER_V18, H5F_LIBVER_V18);
+#else
+          H5F_LIBVER_LATEST, H5F_LIBVER_LATEST);
+#endif
+
     hid_t g_propfilecreate = H5Pcreate(H5P_FILE_CREATE);
 
 #ifdef JFC_PATCH_2015_2
@@ -2319,6 +2320,7 @@
       (prop set to file creation )*/
     H5Pset_link_creation_order(g_propfilecreate,
                                H5P_CRT_ORDER_TRACKED | H5P_CRT_ORDER_INDEXED);
+
     fid = H5Fcreate(name, H5F_ACC_TRUNC, g_propfilecreate, g_propfileopen);
     H5Pclose(g_propfilecreate);
     H5Pclose(g_propfileopen);
@@ -2340,7 +2342,7 @@
     }
   }
   else {
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
     if (H5Fis_accessible(name, H5P_DEFAULT) <= 0) {
 #else
     if (H5Fis_hdf5(name) <= 0) {
@@ -2349,16 +2351,44 @@
       set_error(ADFH_ERR_NOT_HDF5_FILE, err);
       return;
     }
+
 #if CG_BUILD_PARALLEL
 #if HDF5_HAVE_COLL_METADATA
     H5Pset_all_coll_metadata_ops( g_propfileopen, 1 );
 #endif
 #endif
     if (mode == ADFH_MODE_RDO) {
+      /* Patch to read file created with CGNS 3.3 and hdf5 > 1.8 */
+      H5Pset_libver_bounds(g_propfileopen,
+                           H5F_LIBVER_LATEST, H5F_LIBVER_LATEST);
       fid = H5Fopen(name, H5F_ACC_RDONLY, g_propfileopen);
     }
     else {
+
+#if !ADFH_HDF5_HAVE_110_API
+      H5Pset_libver_bounds(g_propfileopen,
+                           H5F_LIBVER_LATEST, H5F_LIBVER_LATEST);
+#endif
+
       fid = H5Fopen(name, H5F_ACC_RDWR, g_propfileopen);
+
+#if ADFH_HDF5_HAVE_110_API
+      hid_t access_fapl = H5Fget_access_plist(fid);
+
+      H5F_libver_t low, high; /* File format bounds */
+      H5Pget_libver_bounds(access_fapl, &low, &high);
+
+      if(low > H5F_LIBVER_V18) {
+        /* NOTE: HDF5 can not downgrade to a lower version bound (which can be done with h5repack), so
+           the best that can be done is not to use a version higher than the lower bound. */
+        H5Fset_libver_bounds(fid, low, low);
+      } else {
+        H5Fset_libver_bounds(fid, H5F_LIBVER_V18, H5F_LIBVER_V18);
+      }
+
+      H5Pclose(access_fapl);
+#endif
+
     }
     H5Pclose(g_propfileopen);
     if (fid < 0) {
@@ -2368,7 +2398,7 @@
     gid = H5Gopen2(fid, "/", H5P_DEFAULT);
 #ifdef ADFH_FORTRAN_INDEXING
     if (mode != ADFH_MODE_RDO && child_exists(gid, D_OLDVERS)) {
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
       H5Literate2(gid, H5_INDEX_CRT_ORDER, H5_ITER_INC, NULL, fix_dimensions, NULL);
 #else
       H5Literate(gid, H5_INDEX_CRT_ORDER, H5_ITER_INC, NULL, fix_dimensions, NULL);
@@ -2396,7 +2426,7 @@
     if (NULL == name || 0 == *name)
         *err = NULL_STRING_POINTER;
     else
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
         *err = H5Fis_accessible(name, H5P_DEFAULT);
 #else
         *err = H5Fis_hdf5(name);
@@ -2469,7 +2499,7 @@
 {
   ADFH_DEBUG(("ADFH_Database_Delete [%s]",name));
 
-#if H5_VERSION_GE(1,12,0)
+#if ADFH_HDF5_HAVE_112_API
   if (H5Fis_accessible(name, H5P_DEFAULT) <=0)
 #else
   if (H5Fis_hdf5(name) <= 0)
diff -ruN VTK-9.2.6/ThirdParty/loguru/vtkloguru/CMakeLists.txt VTK-9.2.6.patched/ThirdParty/loguru/vtkloguru/CMakeLists.txt
--- VTK-9.2.6/ThirdParty/loguru/vtkloguru/CMakeLists.txt	2023-02-15 05:03:53.000000000 +0100
+++ VTK-9.2.6.patched/ThirdParty/loguru/vtkloguru/CMakeLists.txt	2024-08-15 12:13:34.240343639 +0200
@@ -5,10 +5,23 @@
 set(sources
   loguru.cpp)
 
+include(CheckIncludeFile)
+check_include_file("<cxxabi.h>" VTK_LOGURU_HAVE_CXXABI_H)
+check_include_file("<dlfcn.h>" VTK_LOGURU_HAVE_DLFCN_H)
+check_include_file("<execinfo.h>" VTK_LOGURU_HAVE_EXECINFO_H)
+
+set(loguru_have_stacktraces 0)
+if (VTK_LOGURU_HAVE_CXXABI_H AND VTK_LOGURU_HAVE_DLFCN_H AND VTK_LOGURU_HAVE_EXECINFO_H)
+  set(loguru_have_stacktraces 1)
+endif ()
+
 vtk_module_add_module(VTK::loguru
   SOURCES ${sources}
   HEADERS ${headers}
   HEADERS_SUBDIR "vtkloguru")
+vtk_module_definitions(VTK::loguru
+  PRIVATE
+    "LOGURU_STACKTRACES=$<BOOL:${loguru_have_stacktraces}>")
 
 include(GenerateExportHeader)
 generate_export_header(loguru
@@ -16,4 +29,8 @@
   EXPORT_FILE_NAME vtkloguru_export.h)
 
 vtk_module_find_package(PACKAGE Threads)
-vtk_module_link(VTK::loguru PRIVATE Threads::Threads ${CMAKE_DL_LIBS})
+vtk_module_link(VTK::loguru PRIVATE Threads::Threads)
+
+if (loguru_have_stacktraces)
+  vtk_module_link(VTK::loguru PRIVATE ${CMAKE_DL_LIBS})
+endif ()
diff -ruN VTK-9.2.6/ThirdParty/netcdf/vtknetcdf/libhdf5/hdf5open.c VTK-9.2.6.patched/ThirdParty/netcdf/vtknetcdf/libhdf5/hdf5open.c
--- VTK-9.2.6/ThirdParty/netcdf/vtknetcdf/libhdf5/hdf5open.c	2023-02-15 05:03:53.000000000 +0100
+++ VTK-9.2.6.patched/ThirdParty/netcdf/vtknetcdf/libhdf5/hdf5open.c	2024-08-15 12:57:39.923490833 +0200
@@ -2557,7 +2557,7 @@
  */
 static int
 read_hdf5_obj(hid_t grpid, const char *name,
-#if H5_VERSION_GE(1,12,0)
+#if defined(H5Lget_info_vers) && H5Lget_info_vers == 2
 	      const H5L_info2_t *info,
 #else
 	      const H5L_info_t *info,
